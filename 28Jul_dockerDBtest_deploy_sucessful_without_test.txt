# -----------------------------------------------------------------------------
# Workflow: Build and Upload WAR for icasework
#
# Automates the process of building the iCasework WAR file using Maven.
# Triggered on push, pull request, or manual dispatch on the `main` branch.
# -----------------------------------------------------------------------------
name: Build and Test with PostgreSQL 14

on:
  push:
    branches: [510-docker-db-test]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Initialize Git LFS
        run: git lfs install

      - name: Set up Java and Maven
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Install PostgreSQL Client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Clone and install icasework-dependencies
        env:
          TOKEN: ${{ secrets.ICASEWORK_DEPENDENCIES_PAT }}
        run: |
          git clone https://x-access-token:${TOKEN}@github.com/civica/icasework-dependencies.git
          cd icasework-dependencies
          chmod +x install.sh
          ./install.sh

      - name: Restore icasework-data-common
        env:
          TOKEN: ${{ secrets.ICASEWORK_DEPENDENCIES_PAT }}
          PGPASSWORD: testpass
        run: |
          git clone https://x-access-token:${TOKEN}@github.com/civica/icasework-data-common.git
          ls -la icasework-data-common
          pg_restore -h localhost -p 5432 -U testuser -d testdb \
            --no-owner --no-privileges \
            icasework-data-common/jdbcoct28.backup
          pg_restore -h localhost -p 5432 -U testuser -d testdb \
            --no-owner --no-privileges \
            icasework-data-common/suppj10.backup

      - name: Restore icasework-data-schema-civicalrtestlegal
        env:
          TOKEN: ${{ secrets.ICASEWORK_DEPENDENCIES_PAT }}
          PGPASSWORD: testpass
        run: |
          git clone https://x-access-token:${TOKEN}@github.com/civica/icasework-data-schema-civicalrtestlegal.git
          ls -la icasework-data-schema-civicalrtestlegal
          # pg_restore -h localhost -p 5432 -U testuser -d testdb \
          # --no-owner --no-privileges \
          #  icasework-data-schema-civicalrtestlegal/civicalrtestlegal.backup

      - name: Install git-crypt
        run: |
          sudo apt-get update
          sudo apt-get install -y git-crypt

      - name: Decode and import git-crypt key
        run: |
          echo "${{ secrets.GIT_CRYPT_KEY }}" | base64 --decode > git-crypt-key
          git-crypt unlock git-crypt-key

      - name: Recreate production.properties
        run: |
          echo "${{ secrets.PRODUCTION_PROPERTIES_B64 }}" | base64 --decode > src/main/filters/production.properties

      - name: Build and test with Maven
        env:
          DATABASE_URL: jdbc:postgresql://localhost:5432/testdb
          DB_USER: testuser
          DB_PASSWORD: testpass
        run: |
          mvn -D skipTests=true -P production clean package

      - name: Upload WAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: war
          path: target/*.war

      - name: Show workflow run and Git commit info
        run: |
          echo "Branch: ${{ github.ref }}, Run: ${{ github.run_number }}"
          git log -1 --pretty=format:"Commit: %h%nAuthor: %an%nDate: %ad%nMessage: %s"

  upload:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download WAR artifact
        uses: actions/download-artifact@v4
        with:
          name: war
          path: .

      - name: Find and rename WAR file
        run: |
          WAR_FILE=$(find . -name "*.war" | head -n 1)
          echo "Found WAR: $WAR_FILE"
          mv "$WAR_FILE" icasework.war

      - name: Deploy to Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: UAT iCasework
          environment_name: devadmin-al23-0
          region: eu-central-1
          version_label: icasework-${{ github.run_number }}
          deployment_package: i